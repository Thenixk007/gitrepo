<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>